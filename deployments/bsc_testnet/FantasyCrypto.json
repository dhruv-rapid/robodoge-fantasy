{
  "address": "0x66048F3aF1D2a4Ee022aE43f6f2B7a338618Ca44",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "auth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumTokenBalance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_robodogeToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_roboDogeStaking",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "poolID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[10]",
          "name": "aggregatorAddress",
          "type": "address[10]"
        }
      ],
      "name": "enteredPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "poolID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryFees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "poolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "poolID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "winner",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        }
      ],
      "name": "rewardsDistributed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AuthAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entryFees",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        },
        {
          "internalType": "address[10]",
          "name": "_aggregatorAddress",
          "type": "address[10]"
        }
      ],
      "name": "enterPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        }
      ],
      "name": "getPoolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "entryFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "userAddress",
              "type": "address[]"
            }
          ],
          "internalType": "struct FantasyCrypto.pool",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUserSelectionInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address[10]",
              "name": "aggregatorAddresses",
              "type": "address[10]"
            }
          ],
          "internalType": "struct FantasyCrypto.userDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "entryFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_auth",
          "type": "address"
        }
      ],
      "name": "setAuth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "winners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        }
      ],
      "name": "setWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumTokenBalance",
          "type": "uint256"
        }
      ],
      "name": "setminimumTokenBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewActivePools",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3e64da9de5e780cc369865ce9db36035650b4f17a12e6595085f5204506f8316",
  "receipt": {
    "to": null,
    "from": "0xCACe706c682fF9d8EEED79619a94EEefEDaa8ea8",
    "contractAddress": "0x66048F3aF1D2a4Ee022aE43f6f2B7a338618Ca44",
    "transactionIndex": 7,
    "gasUsed": "3422570",
    "logsBloom": "0x
    "blockHash": "0x0ac9e620821a0e16c68e0992b4a03703f98edd3c13d3e1cf17d5b2b5555f242c",
    "transactionHash": "0x3e64da9de5e780cc369865ce9db36035650b4f17a12e6595085f5204506f8316",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 15244171,
        "transactionHash": "0x3e64da9de5e780cc369865ce9db36035650b4f17a12e6595085f5204506f8316",
        "address": "0x66048F3aF1D2a4Ee022aE43f6f2B7a338618Ca44",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cace706c682ff9d8eeed79619a94eeefedaa8ea8"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x0ac9e620821a0e16c68e0992b4a03703f98edd3c13d3e1cf17d5b2b5555f242c"
      }
    ],
    "blockNumber": 15244171,
    "cumulativeGasUsed": "4488496",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCACe706c682fF9d8EEED79619a94EEefEDaa8ea8",
    0,
    0,
    "0x5e74c656b269893e31E578E8004fD321cAcd0Ad6",
    "0x0000000000000000000000000000000000000000"
  ],
  "solcInputHash": "badcbf36eb5ee66b88fed6a880a65539",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_robodogeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_roboDogeStaking\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[10]\",\"name\":\"aggregatorAddress\",\"type\":\"address[10]\"}],\"name\":\"enteredPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"poolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"winner\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"rewardsDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AuthAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryFees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"address[10]\",\"name\":\"_aggregatorAddress\",\"type\":\"address[10]\"}],\"name\":\"enterPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"entryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"userAddress\",\"type\":\"address[]\"}],\"internalType\":\"struct FantasyCrypto.pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUserSelectionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address[10]\",\"name\":\"aggregatorAddresses\",\"type\":\"address[10]\"}],\"internalType\":\"struct FantasyCrypto.userDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"entryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_auth\",\"type\":\"address\"}],\"name\":\"setAuth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumTokenBalance\",\"type\":\"uint256\"}],\"name\":\"setminimumTokenBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewActivePools\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FantasyCrypto.sol\":\"FantasyCrypto\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FantasyCrypto.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IERC20 {\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\\ninterface WBNB {\\n    function deposit() external payable;\\n}\\n\\ninterface AggregatorV3Interface {\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\\ninterface RoboDogeCoin {\\n    function balanceOf(address _address) external view returns (uint256);\\n}\\n\\ninterface RoboDogeStaking {\\n    struct Stake {\\n        uint256 tAmount;\\n        uint256 rAmount;\\n        uint256 time;\\n        uint256 period;\\n        uint256 rate;\\n        bool isActive;\\n    }\\n\\n    function getAllStakes(address _address)\\n        external\\n        view\\n        returns (Stake[] memory);\\n}\\n\\ncontract FantasyCrypto is Ownable {\\n    RoboDogeCoin private token;\\n    RoboDogeStaking private staking;\\n\\n    struct pool {\\n        uint256 entryFee;\\n        address tokenAddress;\\n        uint256 startTime;\\n        uint256 endTime;\\n        address[] userAddress;\\n    }\\n    struct userDetails {\\n        address[10] aggregatorAddresses;\\n    }\\n\\n    struct winner {\\n        address[] user;\\n        uint256[] amount;\\n    }\\n\\n    uint256 public minimumTokenBalance;\\n    uint256 public fee;\\n    address public AuthAddress;\\n    uint256 public poolCounter = 0;\\n    mapping(uint256 => pool) public pools;\\n    mapping(uint256 => mapping(address => userDetails)) internal userSelection;\\n    mapping(address => uint256) public feeAmount;\\n    mapping(uint256 => winner) internal winnerDetails;\\n\\n    event poolCreated(\\n        uint256 poolID,\\n        uint256 entryFees,\\n        uint256 startTime,\\n        uint256 endTime,\\n        address tokenAddress\\n    );\\n    event enteredPool(\\n        address user,\\n        uint256 poolID,\\n        address[10] aggregatorAddress\\n    );\\n    event rewardsDistributed(\\n        uint256 poolID,\\n        address[] winner,\\n        uint256[] amount\\n    );\\n\\n    constructor(\\n        address auth,\\n        uint256 _fee,\\n        uint256 _minimumTokenBalance,\\n        address _robodogeToken,\\n        address _roboDogeStaking\\n    ) {\\n        AuthAddress = auth;\\n        fee = _fee;\\n        minimumTokenBalance = _minimumTokenBalance;\\n        token = RoboDogeCoin(_robodogeToken);\\n        staking = RoboDogeStaking(_roboDogeStaking);\\n    }\\n\\n    modifier isAuth() {\\n        require(msg.sender == AuthAddress, \\\"Address is not AuthAddress\\\");\\n        _;\\n    }\\n\\n    function createPool(\\n        uint256 entryFees,\\n        address _tokenAddress,\\n        uint256 _startTime,\\n        uint256 _endTime\\n    ) external onlyOwner {\\n        require(\\n            _startTime < _endTime,\\n            \\\"Start time cannot be greater than end time.\\\"\\n        );\\n        require(\\n            _startTime > block.timestamp,\\n            \\\"Start time must be greator than current time\\\"\\n        );\\n        require(\\n            _tokenAddress != address(0),\\n            \\\"Token Address must not be zero address\\\"\\n        );\\n        pools[poolCounter].entryFee = entryFees;\\n        pools[poolCounter].startTime = _startTime;\\n        pools[poolCounter].endTime = _endTime;\\n        pools[poolCounter].tokenAddress = _tokenAddress;\\n        emit poolCreated(\\n            poolCounter,\\n            entryFees,\\n            _startTime,\\n            _endTime,\\n            _tokenAddress\\n        );\\n        poolCounter++;\\n    }\\n\\n    function enterPool(uint256 _poolID, address[10] memory _aggregatorAddress)\\n        external payable\\n    {\\n        uint256 sum = 0;\\n        if (token.balanceOf(msg.sender) < minimumTokenBalance) {\\n            for (\\n                uint256 i = 0;\\n                i < staking.getAllStakes(msg.sender).length;\\n                i++\\n            ) {\\n                if (staking.getAllStakes(msg.sender)[i].isActive) {\\n                    sum += staking.getAllStakes(msg.sender)[i].tAmount;\\n                }\\n            }\\n        }\\n\\n        require(\\n            token.balanceOf(msg.sender) + sum >= minimumTokenBalance,\\n            \\\"You dont have minimum RoboDoge Tokens.\\\"\\n        );\\n        require(\\n            block.timestamp < pools[_poolID].startTime,\\n            \\\"Pool has already started.\\\"\\n        );\\n        require(_poolID < poolCounter, \\\"Pool ID must exist\\\");\\n\\n        for(uint8 i = 0; i < 10; i++) {\\n            require(\\n                userSelection[_poolID][msg.sender].aggregatorAddresses[i] == address(0) &&\\n                _aggregatorAddress[i] != address(0),\\n                \\\"User already entered the pool\\\"\\n            );\\n        }\\n\\n        userSelection[_poolID][msg.sender]\\n            .aggregatorAddresses = _aggregatorAddress;\\n        pools[_poolID].userAddress.push(msg.sender);\\n\\n        if (pools[_poolID].tokenAddress == 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c) {\\n            require(msg.value >= pools[_poolID].entryFee, \\\"Insufficient funds sent\\\");\\n            WBNB(pools[_poolID].tokenAddress).deposit{value: pools[_poolID].entryFee}();\\n            payable(msg.sender).transfer(msg.value - pools[_poolID].entryFee);\\n        } else {\\n            IERC20(pools[_poolID].tokenAddress).transferFrom(\\n                msg.sender,\\n                address(this),\\n                pools[_poolID].entryFee\\n            );\\n        }\\n\\n        emit enteredPool(msg.sender, _poolID, _aggregatorAddress);\\n    }\\n\\n    function withdrawFees(address tokenAddress) external onlyOwner {\\n        require(feeAmount[tokenAddress] > 0, \\\"No fees has been collected yet.\\\");\\n        uint256 _fee = feeAmount[tokenAddress];\\n        delete feeAmount[tokenAddress];\\n        IERC20(tokenAddress).transfer(msg.sender, _fee);\\n    }\\n\\n    function setWinner(\\n        uint256 _poolID,\\n        address[] memory winners,\\n        uint256[] memory amount\\n    ) external isAuth {\\n        require(\\n            block.timestamp > pools[_poolID].endTime,\\n            \\\"The pool has not been ended yet.\\\"\\n        );\\n        require(\\n            winnerDetails[_poolID].user.length == 0,\\n            \\\"Winners are already set for this pool.\\\"\\n        );\\n        require(\\n            winners.length <= pools[_poolID].userAddress.length,\\n            \\\"Winners must be less than total users.\\\"\\n        );\\n        require(\\n            winners.length == amount.length, \\n            \\\"Winners and amounts must be of same length\\\"\\n        );\\n\\n        winnerDetails[_poolID].user = winners;\\n        winnerDetails[_poolID].amount = amount;\\n    }\\n\\n    function claimReward(uint256 _poolID, uint256 position) external {\\n        require(\\n            msg.sender == winnerDetails[_poolID].user[position],\\n            \\\"You are not the winner for this position.\\\"\\n        );\\n        require(\\n            block.timestamp > pools[_poolID].endTime,\\n            \\\"The pool has not been ended yet\\\"\\n        );\\n        winnerDetails[_poolID].user[position] = address(0);\\n        uint256 _fee = winnerDetails[_poolID].amount[position] * fee / 10000;\\n        feeAmount[pools[_poolID].tokenAddress] += _fee;\\n        IERC20(pools[_poolID].tokenAddress).transfer(\\n            msg.sender,\\n            winnerDetails[_poolID].amount[position] - _fee\\n        );\\n    }\\n\\n    function setAuth(address _auth) external onlyOwner {\\n        AuthAddress = _auth;\\n    }\\n\\n    function setFee(uint256 _fee) external onlyOwner {\\n        fee = _fee;\\n    }\\n\\n    function setminimumTokenBalance(uint256 _minimumTokenBalance)\\n        external\\n        onlyOwner\\n    {\\n        minimumTokenBalance = _minimumTokenBalance;\\n    }\\n\\n    function viewActivePools()\\n        external\\n        view\\n        returns (uint256[] memory, uint256)\\n    {\\n        uint256[] memory activePools = new uint256[](poolCounter);\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < poolCounter; i++) {\\n            if (pools[i].endTime > block.timestamp) {\\n                activePools[count] = i;\\n                count++;\\n            }\\n        }\\n        return (activePools, count);\\n    }\\n\\n    function getPoolInfo(uint256 _poolID) external view returns (pool memory) {\\n        return pools[_poolID];\\n    }\\n\\n    function getUserSelectionInfo(uint256 _poolID, address _address)\\n        external\\n        view\\n        returns (userDetails memory)\\n    {\\n        return userSelection[_poolID][_address];\\n    }\\n}\",\"keccak256\":\"0xa75be2e84d0fdbb26362167bc712938f2c8665cce0d9689ba1bdbeb274602e97\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c80637e9c0891116100a0578063a5a7274e11610064578063a5a7274e146103b1578063ac4afa38146103dc578063ddca3f431461041c578063efa5aa1914610447578063f2fde38b146104705761011f565b80637e9c0891146102cc57806386bb8f37146103095780638da5cb5b14610332578063970d6a3f1461035d5780639e3079cb146103865761011f565b80632c224e51116100e75780632c224e51146101e65780632f380b351461021257806369fe0e2d1461024f578063715018a6146102785780637488fcf51461028f5761011f565b806302625c1d146101245780630a54a45214610140578063164e68de1461016b578063264f173e146101945780632b2e05c1146101bd575b600080fd5b61013e600480360381019061013991906128ec565b610499565b005b34801561014c57600080fd5b50610155610f52565b6040516101629190613224565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190612768565b610f58565b005b3480156101a057600080fd5b506101bb60048036038101906101b691906127fb565b61116f565b005b3480156101c957600080fd5b506101e460048036038101906101df9190612768565b6111f5565b005b3480156101f257600080fd5b506101fb6112b5565b604051610209929190612f76565b60405180910390f35b34801561021e57600080fd5b50610239600480360381019061023491906127fb565b6113ce565b60405161024691906131e6565b60405180910390f35b34801561025b57600080fd5b50610276600480360381019061027191906127fb565b6114fd565b005b34801561028457600080fd5b5061028d611583565b005b34801561029b57600080fd5b506102b660048036038101906102b1919061284d565b61160b565b6040516102c39190613208565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee9190612768565b6116f1565b6040516103009190613224565b60405180910390f35b34801561031557600080fd5b50610330600480360381019061032b91906129a8565b611709565b005b34801561033e57600080fd5b50610347611b0e565b6040516103549190612ec3565b60405180910390f35b34801561036957600080fd5b50610384600480360381019061037f9190612929565b611b37565b005b34801561039257600080fd5b5061039b611d77565b6040516103a89190613224565b60405180910390f35b3480156103bd57600080fd5b506103c6611d7d565b6040516103d39190612ec3565b60405180910390f35b3480156103e857600080fd5b5061040360048036038101906103fe91906127fb565b611da3565b604051610413949392919061323f565b60405180910390f35b34801561042857600080fd5b50610431611df3565b60405161043e9190613224565b60405180910390f35b34801561045357600080fd5b5061046e60048036038101906104699190612889565b611df9565b005b34801561047c57600080fd5b5061049760048036038101906104929190612768565b612076565b005b6000600354600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104f99190612ec3565b60206040518083038186803b15801561051157600080fd5b505afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190612824565b101561081a5760005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304238994336040518263ffffffff1660e01b81526004016105ad9190612ec3565b60006040518083038186803b1580156105c557600080fd5b505afa1580156105d9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106029190612791565b5181101561081857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304238994336040518263ffffffff1660e01b81526004016106659190612ec3565b60006040518083038186803b15801561067d57600080fd5b505afa158015610691573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106ba9190612791565b81815181106106f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160a001511561080557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304238994336040518263ffffffff1660e01b815260040161075e9190612ec3565b60006040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107b39190612791565b81815181106107eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160000151826108029190613461565b91505b8080610810906135fc565b915050610552565b505b60035481600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108799190612ec3565b60206040518083038186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c99190612824565b6108d39190613461565b1015610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090b90613166565b60405180910390fd5b6007600084815260200190815260200160002060020154421061096c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096390613066565b60405180910390fd5b60065483106109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790613186565b60405180910390fd5b60005b600a8160ff161015610b6957600073ffffffffffffffffffffffffffffffffffffffff166008600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018260ff16600a8110610a65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b175750600073ffffffffffffffffffffffffffffffffffffffff16838260ff16600a8110610af9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015173ffffffffffffffffffffffffffffffffffffffff1614155b610b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4d90612fc6565b60405180910390fd5b8080610b6190613645565b9150506109b3565b50816008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190600a610bcc92919061223a565b5060076000848152602001908152602001600020600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c73ffffffffffffffffffffffffffffffffffffffff166007600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e35576007600084815260200190815260200160002060000154341015610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d12906131c6565b60405180910390fd5b6007600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db060076000868152602001908152602001600020600001546040518263ffffffff1660e01b81526004016000604051808303818588803b158015610daf57600080fd5b505af1158015610dc3573d6000803e3d6000fd5b50505050503373ffffffffffffffffffffffffffffffffffffffff166108fc600760008681526020019081526020016000206000015434610e049190613542565b9081150290604051600060405180830381858888f19350505050158015610e2f573d6000803e3d6000fd5b50610f12565b6007600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd333060076000888152602001908152602001600020600001546040518463ffffffff1660e01b8152600401610ebe93929190612ede565b602060405180830381600087803b158015610ed857600080fd5b505af1158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1091906127d2565b505b7f698386947438dbfb4dbae71510c638c396bb35e2fcb05c26a2a94bad4290c3bf338484604051610f4593929190612f3e565b60405180910390a1505050565b60035481565b610f6061216e565b73ffffffffffffffffffffffffffffffffffffffff16610f7e611b0e565b73ffffffffffffffffffffffffffffffffffffffff1614610fd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcb90613106565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104d90613026565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611118929190612f15565b602060405180830381600087803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a91906127d2565b505050565b61117761216e565b73ffffffffffffffffffffffffffffffffffffffff16611195611b0e565b73ffffffffffffffffffffffffffffffffffffffff16146111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e290613106565b60405180910390fd5b8060038190555050565b6111fd61216e565b73ffffffffffffffffffffffffffffffffffffffff1661121b611b0e565b73ffffffffffffffffffffffffffffffffffffffff1614611271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126890613106565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060008060065467ffffffffffffffff8111156112fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561132a5781602001602082028036833780820191505090505b5090506000805b6006548110156113c15742600760008381526020019081526020016000206003015411156113ae5780838381518110611393577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505081806113aa906135fc565b9250505b80806113b9906135fc565b915050611331565b5081819350935050509091565b6113d66122b7565b600760008381526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156114ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114a3575b5050505050815250509050919050565b61150561216e565b73ffffffffffffffffffffffffffffffffffffffff16611523611b0e565b73ffffffffffffffffffffffffffffffffffffffff1614611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157090613106565b60405180910390fd5b8060048190555050565b61158b61216e565b73ffffffffffffffffffffffffffffffffffffffff166115a9611b0e565b73ffffffffffffffffffffffffffffffffffffffff16146115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690613106565b60405180910390fd5b6116096000612176565b565b6116136122fc565b6008600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052908160008201600a806020026040519081016040528092919082600a80156116e0576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611696575b505050505081525050905092915050565b60096020528060005260406000206000915090505481565b600a60008381526020019081526020016000206000018181548110611757577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e6906131a6565b60405180910390fd5b60076000838152602001908152602001600020600301544211611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183e90612fe6565b60405180910390fd5b6000600a60008481526020019081526020016000206000018281548110611897577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000612710600454600a60008681526020019081526020016000206001018481548110611935577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015461194a91906134e8565b61195491906134b7565b905080600960006007600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119db9190613461565b925050819055506007600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600a60008881526020019081526020016000206001018681548110611a84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154611a999190613542565b6040518363ffffffff1660e01b8152600401611ab6929190612f15565b602060405180830381600087803b158015611ad057600080fd5b505af1158015611ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0891906127d2565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bbe90613046565b60405180910390fd5b60076000848152602001908152602001600020600301544211611c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1690613086565b60405180910390fd5b6000600a60008581526020019081526020016000206000018054905014611c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7290613126565b60405180910390fd5b600760008481526020019081526020016000206004018054905082511115611cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccf906130e6565b60405180910390fd5b8051825114611d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1390613146565b60405180910390fd5b81600a60008581526020019081526020016000206000019080519060200190611d46929190612315565b5080600a60008581526020019081526020016000206001019080519060200190611d7192919061239f565b50505050565b60065481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60045481565b611e0161216e565b73ffffffffffffffffffffffffffffffffffffffff16611e1f611b0e565b73ffffffffffffffffffffffffffffffffffffffff1614611e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6c90613106565b60405180910390fd5b808210611eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eae906130a6565b60405180910390fd5b428211611ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef0906130c6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6090612fa6565b60405180910390fd5b8360076000600654815260200190815260200160002060000181905550816007600060065481526020019081526020016000206002018190555080600760006006548152602001908152602001600020600301819055508260076000600654815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4a387c1c496fd587cee4aeec2d3b960a0b382a9b678760dbe974026bdba919e060065485848487604051612050959493929190613284565b60405180910390a16006600081548092919061206b906135fc565b919050555050505050565b61207e61216e565b73ffffffffffffffffffffffffffffffffffffffff1661209c611b0e565b73ffffffffffffffffffffffffffffffffffffffff16146120f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e990613106565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215990613006565b60405180910390fd5b61216b81612176565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82600a81019282156122a6579160200282015b828111156122a55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061224d565b5b5090506122b391906123ec565b5090565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001606081525090565b604051806020016040528061230f612409565b81525090565b82805482825590600052602060002090810192821561238e579160200282015b8281111561238d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612335565b5b50905061239b91906123ec565b5090565b8280548282559060005260206000209081019282156123db579160200282015b828111156123da5782518255916020019190600101906123bf565b5b5090506123e891906123ec565b5090565b5b808211156124055760008160009055506001016123ed565b5090565b604051806101400160405280600a90602082028036833780820191505090505090565b600061243f61243a846132fc565b6132d7565b9050808285602086028201111561245557600080fd5b60005b85811015612485578161246b88826125d3565b845260208401935060208301925050600181019050612458565b5050509392505050565b60006124a261249d84613322565b6132d7565b905080838252602082019050828560208602820111156124c157600080fd5b60005b858110156124f157816124d788826125d3565b8452602084019350602083019250506001810190506124c4565b5050509392505050565b600061250e6125098461334e565b6132d7565b905080838252602082019050828560c086028201111561252d57600080fd5b60005b8581101561255d578161254388826126a2565b845260208401935060c08301925050600181019050612530565b5050509392505050565b600061257a6125758461337a565b6132d7565b9050808382526020820190508285602086028201111561259957600080fd5b60005b858110156125c957816125af888261273e565b84526020840193506020830192505060018101905061259c565b5050509392505050565b6000813590506125e281613b45565b92915050565b600082601f8301126125f957600080fd5b600a61260684828561242c565b91505092915050565b600082601f83011261262057600080fd5b813561263084826020860161248f565b91505092915050565b600082601f83011261264a57600080fd5b815161265a8482602086016124fb565b91505092915050565b600082601f83011261267457600080fd5b8135612684848260208601612567565b91505092915050565b60008151905061269c81613b5c565b92915050565b600060c082840312156126b457600080fd5b6126be60c06132d7565b905060006126ce84828501612753565b60008301525060206126e284828501612753565b60208301525060406126f684828501612753565b604083015250606061270a84828501612753565b606083015250608061271e84828501612753565b60808301525060a06127328482850161268d565b60a08301525092915050565b60008135905061274d81613b73565b92915050565b60008151905061276281613b73565b92915050565b60006020828403121561277a57600080fd5b6000612788848285016125d3565b91505092915050565b6000602082840312156127a357600080fd5b600082015167ffffffffffffffff8111156127bd57600080fd5b6127c984828501612639565b91505092915050565b6000602082840312156127e457600080fd5b60006127f28482850161268d565b91505092915050565b60006020828403121561280d57600080fd5b600061281b8482850161273e565b91505092915050565b60006020828403121561283657600080fd5b600061284484828501612753565b91505092915050565b6000806040838503121561286057600080fd5b600061286e8582860161273e565b925050602061287f858286016125d3565b9150509250929050565b6000806000806080858703121561289f57600080fd5b60006128ad8782880161273e565b94505060206128be878288016125d3565b93505060406128cf8782880161273e565b92505060606128e08782880161273e565b91505092959194509250565b600080610160838503121561290057600080fd5b600061290e8582860161273e565b925050602061291f858286016125e8565b9150509250929050565b60008060006060848603121561293e57600080fd5b600061294c8682870161273e565b935050602084013567ffffffffffffffff81111561296957600080fd5b6129758682870161260f565b925050604084013567ffffffffffffffff81111561299257600080fd5b61299e86828701612663565b9150509250925092565b600080604083850312156129bb57600080fd5b60006129c98582860161273e565b92505060206129da8582860161273e565b9150509250929050565b60006129f08383612a14565b60208301905092915050565b6000612a088383612ea5565b60208301905092915050565b612a1d81613576565b82525050565b612a2c81613576565b82525050565b612a3b816133d0565b612a458184613418565b9250612a50826133a6565b8060005b83811015612a81578151612a6887826129e4565b9650612a73836133f1565b925050600181019050612a54565b505050505050565b612a92816133d0565b612a9c8184613423565b9250612aa7826133a6565b8060005b83811015612ad8578151612abf87826129e4565b9650612aca836133f1565b925050600181019050612aab565b505050505050565b6000612aeb826133db565b612af5818561342e565b9350612b00836133b0565b8060005b83811015612b31578151612b1888826129e4565b9750612b23836133fe565b925050600181019050612b04565b5085935050505092915050565b6000612b49826133e6565b612b53818561343f565b9350612b5e836133c0565b8060005b83811015612b8f578151612b7688826129fc565b9750612b818361340b565b925050600181019050612b62565b5085935050505092915050565b6000612ba9602683613450565b9150612bb48261370d565b604082019050919050565b6000612bcc601d83613450565b9150612bd78261375c565b602082019050919050565b6000612bef601f83613450565b9150612bfa82613785565b602082019050919050565b6000612c12602683613450565b9150612c1d826137ae565b604082019050919050565b6000612c35601f83613450565b9150612c40826137fd565b602082019050919050565b6000612c58601a83613450565b9150612c6382613826565b602082019050919050565b6000612c7b601983613450565b9150612c868261384f565b602082019050919050565b6000612c9e602083613450565b9150612ca982613878565b602082019050919050565b6000612cc1602b83613450565b9150612ccc826138a1565b604082019050919050565b6000612ce4602c83613450565b9150612cef826138f0565b604082019050919050565b6000612d07602683613450565b9150612d128261393f565b604082019050919050565b6000612d2a602083613450565b9150612d358261398e565b602082019050919050565b6000612d4d602683613450565b9150612d58826139b7565b604082019050919050565b6000612d70602a83613450565b9150612d7b82613a06565b604082019050919050565b6000612d93602683613450565b9150612d9e82613a55565b604082019050919050565b6000612db6601283613450565b9150612dc182613aa4565b602082019050919050565b6000612dd9602983613450565b9150612de482613acd565b604082019050919050565b6000612dfc601783613450565b9150612e0782613b1c565b602082019050919050565b600060a083016000830151612e2a6000860182612ea5565b506020830151612e3d6020860182612a14565b506040830151612e506040860182612ea5565b506060830151612e636060860182612ea5565b5060808301518482036080860152612e7b8282612ae0565b9150508091505092915050565b61014082016000820151612e9f6000850182612a32565b50505050565b612eae816135b4565b82525050565b612ebd816135b4565b82525050565b6000602082019050612ed86000830184612a23565b92915050565b6000606082019050612ef36000830186612a23565b612f006020830185612a23565b612f0d6040830184612eb4565b949350505050565b6000604082019050612f2a6000830185612a23565b612f376020830184612eb4565b9392505050565b600061018082019050612f546000830186612a23565b612f616020830185612eb4565b612f6e6040830184612a89565b949350505050565b60006040820190508181036000830152612f908185612b3e565b9050612f9f6020830184612eb4565b9392505050565b60006020820190508181036000830152612fbf81612b9c565b9050919050565b60006020820190508181036000830152612fdf81612bbf565b9050919050565b60006020820190508181036000830152612fff81612be2565b9050919050565b6000602082019050818103600083015261301f81612c05565b9050919050565b6000602082019050818103600083015261303f81612c28565b9050919050565b6000602082019050818103600083015261305f81612c4b565b9050919050565b6000602082019050818103600083015261307f81612c6e565b9050919050565b6000602082019050818103600083015261309f81612c91565b9050919050565b600060208201905081810360008301526130bf81612cb4565b9050919050565b600060208201905081810360008301526130df81612cd7565b9050919050565b600060208201905081810360008301526130ff81612cfa565b9050919050565b6000602082019050818103600083015261311f81612d1d565b9050919050565b6000602082019050818103600083015261313f81612d40565b9050919050565b6000602082019050818103600083015261315f81612d63565b9050919050565b6000602082019050818103600083015261317f81612d86565b9050919050565b6000602082019050818103600083015261319f81612da9565b9050919050565b600060208201905081810360008301526131bf81612dcc565b9050919050565b600060208201905081810360008301526131df81612def565b9050919050565b600060208201905081810360008301526132008184612e12565b905092915050565b60006101408201905061321e6000830184612e88565b92915050565b60006020820190506132396000830184612eb4565b92915050565b60006080820190506132546000830187612eb4565b6132616020830186612a23565b61326e6040830185612eb4565b61327b6060830184612eb4565b95945050505050565b600060a0820190506132996000830188612eb4565b6132a66020830187612eb4565b6132b36040830186612eb4565b6132c06060830185612eb4565b6132cd6080830184612a23565b9695505050505050565b60006132e16132f2565b90506132ed82826135cb565b919050565b6000604051905090565b600067ffffffffffffffff821115613317576133166136cd565b5b602082029050919050565b600067ffffffffffffffff82111561333d5761333c6136cd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613369576133686136cd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613395576133946136cd565b5b602082029050602081019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000600a9050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061346c826135b4565b9150613477836135b4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156134ac576134ab61366f565b5b828201905092915050565b60006134c2826135b4565b91506134cd836135b4565b9250826134dd576134dc61369e565b5b828204905092915050565b60006134f3826135b4565b91506134fe836135b4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135375761353661366f565b5b828202905092915050565b600061354d826135b4565b9150613558836135b4565b92508282101561356b5761356a61366f565b5b828203905092915050565b600061358182613594565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6135d4826136fc565b810181811067ffffffffffffffff821117156135f3576135f26136cd565b5b80604052505050565b6000613607826135b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561363a5761363961366f565b5b600182019050919050565b6000613650826135be565b915060ff8214156136645761366361366f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f546f6b656e2041646472657373206d757374206e6f74206265207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5573657220616c726561647920656e74657265642074686520706f6f6c000000600082015250565b7f54686520706f6f6c20686173206e6f74206265656e20656e6465642079657400600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f206665657320686173206265656e20636f6c6c6563746564207965742e00600082015250565b7f41646472657373206973206e6f74204175746841646472657373000000000000600082015250565b7f506f6f6c2068617320616c726561647920737461727465642e00000000000000600082015250565b7f54686520706f6f6c20686173206e6f74206265656e20656e646564207965742e600082015250565b7f53746172742074696d652063616e6e6f7420626520677265617465722074686160008201527f6e20656e642074696d652e000000000000000000000000000000000000000000602082015250565b7f53746172742074696d65206d7573742062652067726561746f72207468616e2060008201527f63757272656e742074696d650000000000000000000000000000000000000000602082015250565b7f57696e6e657273206d757374206265206c657373207468616e20746f74616c2060008201527f75736572732e0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f57696e6e6572732061726520616c72656164792073657420666f72207468697360008201527f20706f6f6c2e0000000000000000000000000000000000000000000000000000602082015250565b7f57696e6e65727320616e6420616d6f756e7473206d757374206265206f66207360008201527f616d65206c656e67746800000000000000000000000000000000000000000000602082015250565b7f596f7520646f6e742068617665206d696e696d756d20526f626f446f6765205460008201527f6f6b656e732e0000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c204944206d7573742065786973740000000000000000000000000000600082015250565b7f596f7520617265206e6f74207468652077696e6e657220666f7220746869732060008201527f706f736974696f6e2e0000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742066756e64732073656e74000000000000000000600082015250565b613b4e81613576565b8114613b5957600080fd5b50565b613b6581613588565b8114613b7057600080fd5b50565b613b7c816135b4565b8114613b8757600080fd5b5056fea264697066735822122026d5b5eb8c669534d8a128df0cd0bfc6f93110a6cb65a66b66a9271298439e9564736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 204,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(RoboDogeCoin)176"
      },
      {
        "astId": 207,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "staking",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(RoboDogeStaking)199"
      },
      {
        "astId": 233,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "minimumTokenBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 235,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "fee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 237,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "AuthAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 240,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "poolCounter",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 245,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "pools",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(pool)219_storage)"
      },
      {
        "astId": 252,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "userSelection",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(userDetails)224_storage))"
      },
      {
        "astId": 256,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "feeAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 261,
        "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
        "label": "winnerDetails",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(winner)231_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)10_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[10]",
        "numberOfBytes": "320"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_contract(RoboDogeCoin)176": {
        "encoding": "inplace",
        "label": "contract RoboDogeCoin",
        "numberOfBytes": "20"
      },
      "t_contract(RoboDogeStaking)199": {
        "encoding": "inplace",
        "label": "contract RoboDogeStaking",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(userDetails)224_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FantasyCrypto.userDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(userDetails)224_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(userDetails)224_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct FantasyCrypto.userDetails))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(userDetails)224_storage)"
      },
      "t_mapping(t_uint256,t_struct(pool)219_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FantasyCrypto.pool)",
        "numberOfBytes": "32",
        "value": "t_struct(pool)219_storage"
      },
      "t_mapping(t_uint256,t_struct(winner)231_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FantasyCrypto.winner)",
        "numberOfBytes": "32",
        "value": "t_struct(winner)231_storage"
      },
      "t_struct(pool)219_storage": {
        "encoding": "inplace",
        "label": "struct FantasyCrypto.pool",
        "members": [
          {
            "astId": 209,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "entryFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 211,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 213,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "startTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 215,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "endTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 218,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "userAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(userDetails)224_storage": {
        "encoding": "inplace",
        "label": "struct FantasyCrypto.userDetails",
        "members": [
          {
            "astId": 223,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "aggregatorAddresses",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)10_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(winner)231_storage": {
        "encoding": "inplace",
        "label": "struct FantasyCrypto.winner",
        "members": [
          {
            "astId": 227,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 230,
            "contract": "contracts/FantasyCrypto.sol:FantasyCrypto",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}